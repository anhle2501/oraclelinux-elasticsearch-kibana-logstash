#!/bin/bash
set -euo pipefail

################################################################
#  AUTO-INSTALL EXTRA ELASTICSEARCH NODE (SSL-aware)
#  Oracle Linux / CentOS / RHEL 8
#  04-2025 / Author: L√™ Nh·ª±t Anh 
################################################################

############## T√ôY CH·ªàNH NHANH ##############
MASTER_IP="192.168.56.10"      # IP ho·∫∑c hostname c·ªßa node master
CLUSTER_NAME="elk-single"      # T√™n cluster ph·∫£i gi·ªëng master
NODE_NAME="data-1"             # T√™n node ph·ª•
ES_VERSION="8.13.4"
CA_PASS="changeme"             # Passphrase c·ªßa CA
#############################################

BASE_DIR="/opt"
ES_TAR="elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz"
ES_DIR="${BASE_DIR}/elasticsearch-${ES_VERSION}"
ES_SYM="${BASE_DIR}/elasticsearch"
ES_USER="elasticsearch"
HOME="/home/vagrant"

HOME_CA="$HOME/elastic-stack-ca.p12"          # File CA ƒë√£ copy t·ª´ master
NODE_P12="${ES_DIR}/config/${NODE_NAME}.p12"

# ----------------------------------------------------------
echo "üëâ [1/9] T·∫°o user h·ªá th·ªëng elasticsearch (n·∫øu ch∆∞a c√≥)‚Ä¶"
id -u $ES_USER &>/dev/null || sudo useradd --system --no-create-home --shell /sbin/nologin $ES_USER

echo "üì¶ [2/9] Gi·∫£i n√©n Elasticsearch $ES_VERSION‚Ä¶"
sudo mkdir -p $BASE_DIR
sudo tar -xzf $HOME/$ES_TAR -C $BASE_DIR
sudo ln -sfn $ES_DIR $ES_SYM
sudo chown -R $ES_USER:$ES_USER $ES_DIR

echo "üñ•Ô∏è  [3/9] TƒÉng vm.max_map_count kernel‚Ä¶"
echo "vm.max_map_count=262144" | sudo tee -a /etc/sysctl.conf
sudo sysctl -w vm.max_map_count=262144

# ----------------------------------------------------------
if [[ -f "$HOME_CA" ]]; then
  echo "üîí [4/9] Ph√°t hi·ªán CA ‚Üí c·∫•u h√¨nh SSL ƒë·ªÉ join cluster."
  sudo cp "$HOME_CA" "$ES_DIR/config/elastic-stack-ca.p12"
  sudo chown $ES_USER:$ES_USER "$ES_DIR/config/elastic-stack-ca.p12"
  sudo chmod 640 "$ES_DIR/config/elastic-stack-ca.p12"

  echo "üîë [5/9] Sinh keystore PKCS12 cho node‚Ä¶"
  printf '%s\n%s\n' "$CA_PASS" "$CA_PASS" | \
   sudo $ES_DIR/bin/elasticsearch-certutil cert \
        --name "$NODE_NAME" --ca "$ES_DIR/config/elastic-stack-ca.p12" \
        --silent --ca-pass "$CA_PASS" --pass "$CA_PASS" --out "$NODE_P12"
  sudo chown $ES_USER:$ES_USER "$NODE_P12"
  sudo chmod 640 "$NODE_P12"

  SSL_BLOCK=$(cat <<SSL
xpack.security.enabled: true
xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.keystore.path: ${NODE_NAME}.p12
xpack.security.http.ssl.keystore.password: ${CA_PASS}
xpack.security.http.ssl.truststore.path: ${NODE_NAME}.p12
xpack.security.http.ssl.truststore.password: ${CA_PASS}

xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
xpack.security.transport.ssl.keystore.path: ${NODE_NAME}.p12
xpack.security.transport.ssl.keystore.password: ${CA_PASS}
xpack.security.transport.ssl.truststore.path: ${NODE_NAME}.p12
xpack.security.transport.ssl.truststore.password: ${CA_PASS}
SSL
)

  echo "‚öôÔ∏è  [6/9] C·∫≠p nh·∫≠t elasticsearch.yml‚Ä¶"
  sudo tee $ES_DIR/config/elasticsearch.yml >/dev/null <<EOF
cluster.name: $CLUSTER_NAME
node.name: $NODE_NAME
network.host: 0.0.0.0
network.publish_host: $(hostname -I | awk '{print $2}')
discovery.seed_hosts: ["$MASTER_IP"]
$SSL_BLOCK
EOF

else
  echo "‚ö†Ô∏è  [4/9] Kh√¥ng ph√°t hi·ªán CA ‚Üí b·ªè qua SSL (standalone mode)."
fi

# ----------------------------------------------------------
echo "üõ†Ô∏è  [7/9] T·∫°o systemd service elasticsearch‚Ä¶"
sudo tee /etc/systemd/system/elasticsearch.service >/dev/null <<EOF
[Unit]
Description=Elasticsearch
Wants=network-online.target
After=network-online.target

[Service]
User=$ES_USER
Group=$ES_USER
ExecStart=$ES_DIR/bin/elasticsearch
Restart=on-failure
LimitNOFILE=65535
Environment=ES_JAVA_HOME=$ES_DIR/jdk

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable elasticsearch

# ----------------------------------------------------------
echo "üöÄ [8/9] Kh·ªüi ƒë·ªông Elasticsearch node ph·ª•‚Ä¶"
sudo systemctl start elasticsearch

echo "‚è≥ [9/9] ƒê·ª£i node HTTPS 9200 s·∫µn s√†ng‚Ä¶"
until curl -ks https://localhost:9200 >/dev/null; do sleep 5; done
echo "‚úÖ Node $NODE_NAME ƒë√£ ch·∫°y HTTPS v√† SSL ho√†n t·∫•t."
